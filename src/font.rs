// const A: [u8; 8] =
// [
//   0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00
// ];
// const B: [u8; 8] =
// [
//   0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00
// ];
// const C: [u8; 8] =
// [
//   0b00111100,
//   0b01100110,
//   0b11000000,
//   0b11000000,
//   0b11000000,
//   0b01100110,
//   0b00111100,
//   0b00000000
// ];
// const D: [u8; 8] =
// [
//   0b11111000,
//   0b01001100,
//   0b01000110,
//   0b01000110,
//   0b01000110,
//   0b01001100,
//   0b11111000,
//   0b00000000
// ];
// const E: [u8; 8] =
// [
//   0b11111110,
//   0b01100010,
//   0b01101000,
//   0b01111000,
//   0b01101000,
//   0b01100010,
//   0b11111110,
//   0b00000000
// ];
// const F: [u8; 8] =
// [
//   0b11111110,
//   0b01100010,
//   0b01101000,
//   0b01111000,
//   0b01101000,
//   0b01100000,
//   0b11110000,
//   0b00000000
// ];
// const G: [u8; 8] =
// [
//   0b00111100,
//   0b01100110,
//   0b11000000,
//   0b11000000,
//   0b11001110,
//   0b01100110,
//   0b00111110,
//   0b00000000
// ];
// const H: [u8; 8] =
// [
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11111100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b00000000
// ];
// const I: [u8; 8] =
// [
//   0b00111100,
//   0b00011000,
//   0b00011000,
//   0b00011000,
//   0b00011000,
//   0b00011000,
//   0b00111100,
//   0b00000000
// ];
// const J: [u8; 8] =
// [
//   0b00011110,
//   0b00001100,
//   0b00001100,
//   0b00001100,
//   0b11001100,
//   0b11001100,
//   0b01111000,
//   0b00000000
// ];
// const K: [u8; 8] =
// [
//   0b11100110,
//   0b01100110,
//   0b01101100,
//   0b01111000,
//   0b01101100,
//   0b01100110,
//   0b11100110,
//   0b00000000
// ];
// const L: [u8; 8] =
// [
//   0b11110000,
//   0b01100000,
//   0b01100000,
//   0b01100000,
//   0b01100010,
//   0b01100110,
//   0b11111110,
//   0b00000000
// ];
// const M: [u8; 8] =
// [
//   0b11000110,
//   0b11101110,
//   0b11111110,
//   0b11111110,
//   0b11010110,
//   0b11000110,
//   0b11000110,
//   0b00000000
// ];
// const N: [u8; 8] =
// [
//   0b11000110,
//   0b11100110,
//   0b11110110,
//   0b11011110,
//   0b11001110,
//   0b11000110,
//   0b11000110,
//   0b00000000
// ];
// const O: [u8; 8] =
// [
//   0b00111000,
//   0b01101100,
//   0b11000110,
//   0b11000110,
//   0b11000110,
//   0b01101100,
//   0b00111000,
//   0b00000000
// ];
// const P: [u8; 8] =
// [
//   0b11111100,
//   0b01100110,
//   0b01100110,
//   0b01111100,
//   0b01100000,
//   0b01100000,
//   0b11110000,
//   0b00000000
// ];
// const Q: [u8; 8] =
// [
//   0b01111000,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11011100,
//   0b01111000,
//   0b00011100,
//   0b00000000
// ];
// const R: [u8; 8] =
// [
//   0b11111100,
//   0b01100110,
//   0b01100110,
//   0b01111100,
//   0b01101100,
//   0b01100110,
//   0b11100110,
//   0b00000000
// ];
// const S: [u8; 8] =
// [
//   0b01111000,
//   0b11001100,
//   0b11100000,
//   0b01110000,
//   0b00011100,
//   0b11001100,
//   0b01111000,
//   0b00000000
// ];
// const T: [u8; 8] =
// [
//   0b11111100,
//   0b10110100,
//   0b00110000,
//   0b00110000,
//   0b00110000,
//   0b00110000,
//   0b01111000,
//   0b00000000
// ];
// const U: [u8; 8] =
// [
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11111100,
//   0b00000000
// ];
// const V: [u8; 8] =
// [
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b01111000,
//   0b00110000,
//   0b00000000
// ];
// const W: [u8; 8] =
// [
//   0b11000110,
//   0b11000110,
//   0b11000110,
//   0b11010110,
//   0b11111110,
//   0b11101110,
//   0b11000110,
//   0b00000000
// ];
// const X: [u8; 8] =
// [
//   0b11000110,
//   0b11000110,
//   0b01101100,
//   0b00111000,
//   0b00111000,
//   0b01101100,
//   0b11000110,
//   0b00000000
// ];
// const Y: [u8; 8] =
// [
//   0b11001100,
//   0b11001100,
//   0b11001100,
//   0b01111000,
//   0b00110000,
//   0b00110000,
//   0b01111000,
//   0b00000000
// ];
// const Z: [u8; 8] =
// [
//   0b11111110,
//   0b11000110,
//   0b10001100,
//   0b00011000,
//   0b00110010,
//   0b01100110,
//   0b11111110,
//   0b00000000
// ];
// const EXC: [u8; 8] =
// [
//   0b00110000,
//   0b00110000,
//   0b00110000,
//   0b00110000,
//   0b00000000,
//   0b00110000,
//   0b00110000,
//   0b00000000
// ];
const SPACE: [u8; 8] = [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];   // U+0021 (!)
const EXC: [u8; 8] = [ 0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00];   // U+0021 (!)
const QUOTE: [u8; 8] = [ 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];   // U+0022 (")
const HASH: [u8; 8] = [ 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00];   // U+0023 (#)
const DOLLAR: [u8; 8] = [ 0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00];   // U+0024 ($)
const PERCENT: [u8; 8] = [ 0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00];   // U+0025 (%)
const ANDPERSAND: [u8; 8] = [ 0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00];   // U+0026 (&)
const SQUOTE: [u8; 8] = [ 0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00];   // U+0027 (')
const L_PAREN: [u8; 8] = [ 0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00];   // U+0028 (()
const R_PAREN: [u8; 8] = [ 0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00];   // U+0029 ())
const STAR: [u8; 8] = [ 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00];   // U+002A (*)
const PLUS: [u8; 8] = [ 0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00];   // U+002B (+)
const COMMA: [u8; 8] = [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06];   // U+002C (,)
const MINUS: [u8; 8] = [ 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00];   // U+002D (-)
const PERIOD: [u8; 8] = [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00];   // U+002E (.)
const B_SLASH: [u8; 8] = [ 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00];   // U+002F (/)
const ZERO: [u8; 8] = [ 0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00];   // U+0030 (0)
const ONE: [u8; 8] = [ 0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00];   // U+0031 (1)
const TWO: [u8; 8] = [ 0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00];   // U+0032 (2)
const THREE: [u8; 8] = [ 0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00];   // U+0033 (3)
const FOUR: [u8; 8] = [ 0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00];   // U+0034 (4)
const FIVE: [u8; 8] = [ 0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00];   // U+0035 (5)
const SIX: [u8; 8] = [ 0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00];   // U+0036 (6)
const SEVEN: [u8; 8] = [ 0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00];   // U+0037 (7)
const EIGHT: [u8; 8] = [ 0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00];   // U+0038 (8)
const NINE: [u8; 8] = [ 0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00];   // U+0039 (9)
const COLON: [u8; 8] = [ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00];   // U+003A (:)
const SEMI_COLON: [u8; 8] = [ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06];   // U+003B (;)
const LESS_THAN: [u8; 8] = [ 0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00];   // U+003C (<)
const EQUAL: [u8; 8] = [ 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00];   // U+003D (=)
const GREATER_THAN: [u8; 8] = [ 0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00];   // U+003E (>)
const QUESTION: [u8; 8] = [ 0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00];   // U+003F (?)
const AT_SIGN: [u8; 8] = [ 0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00];   // U+0040 (@)
const A: [u8; 8] = [ 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00];   // U+0041 (A)
const B: [u8; 8] = [ 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00];   // U+0042 (B)
const C: [u8; 8] = [ 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00];   // U+0043 (C)
const D: [u8; 8] = [ 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00];   // U+0044 (D)
const E: [u8; 8] = [ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00];   // U+0045 (E)
const F: [u8; 8] = [ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00];   // U+0046 (F)
const G: [u8; 8] = [ 0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00];   // U+0047 (G)
const H: [u8; 8] = [ 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00];   // U+0048 (H)
const I: [u8; 8] = [ 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00];   // U+0049 (I)
const J: [u8; 8] = [ 0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00];   // U+004A (J)
const K: [u8; 8] = [ 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00];   // U+004B (K)
const L: [u8; 8] = [ 0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00];   // U+004C (L)
const M: [u8; 8] = [ 0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00];   // U+004D (M)
const N: [u8; 8] = [ 0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00];   // U+004E (N)
const O: [u8; 8] = [ 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00];   // U+004F (O)
const P: [u8; 8] = [ 0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00];   // U+0050 (P)
const Q: [u8; 8] = [ 0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00];   // U+0051 (Q)
const R: [u8; 8] = [ 0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00];   // U+0052 (R)
const S: [u8; 8] = [ 0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00];   // U+0053 (S)
const T: [u8; 8] = [ 0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00];   // U+0054 (T)
const U: [u8; 8] = [ 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00];   // U+0055 (U)
const V: [u8; 8] = [ 0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00];   // U+0056 (V)
const W: [u8; 8] = [ 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00];   // U+0057 (W)
const X: [u8; 8] = [ 0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00];   // U+0058 (X)
const Y: [u8; 8] = [ 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00];   // U+0059 (Y)
const Z: [u8; 8] = [ 0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00];   // U+005A (Z)
const L_BRACKET: [u8; 8] = [ 0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00];   // U+005B ([)
const F_SLASH: [u8; 8] = [ 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00];   // U+005C (\)
const R_BRACKET: [u8; 8] = [ 0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00];   // U+005D (])
const CARROT: [u8; 8] = [ 0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00];   // U+005E (^)
const UNDERSCORE: [u8; 8] = [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF];   // U+005F (_)
const APOS: [u8; 8] = [ 0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00];   // U+0060 (`)
const L_A: [u8; 8] = [ 0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00];   // U+0061 (a)
const L_B: [u8; 8] = [ 0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00];   // U+0062 (b)
const L_C: [u8; 8] = [ 0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00];   // U+0063 (c)
const L_D: [u8; 8] = [ 0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00];   // U+0064 (d)
const L_E: [u8; 8] = [ 0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00];   // U+0065 (e)
const L_F: [u8; 8] = [ 0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00];   // U+0066 (f)
const L_G: [u8; 8] = [ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F];   // U+0067 (g)
const L_H: [u8; 8] = [ 0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00];   // U+0068 (h)
const L_I: [u8; 8] = [ 0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00];   // U+0069 (i)
const L_J: [u8; 8] = [ 0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E];   // U+006A (j)
const L_K: [u8; 8] = [ 0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00];   // U+006B (k)
const L_L: [u8; 8] = [ 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00];   // U+006C (l)
const L_M: [u8; 8] = [ 0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00];   // U+006D (m)
const L_N: [u8; 8] = [ 0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00];   // U+006E (n)
const L_O: [u8; 8] = [ 0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00];   // U+006F (o)
const L_P: [u8; 8] = [ 0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F];   // U+0070 (p)
const L_Q: [u8; 8] = [ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78];   // U+0071 (q)
const L_R: [u8; 8] = [ 0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00];   // U+0072 (r)
const L_S: [u8; 8] = [ 0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00];   // U+0073 (s)
const L_T: [u8; 8] = [ 0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00];   // U+0074 (t)
const L_U: [u8; 8] = [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00];   // U+0075 (u)
const L_V: [u8; 8] = [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00];   // U+0076 (v)
const L_W: [u8; 8] = [ 0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00];   // U+0077 (w)
const L_X: [u8; 8] = [ 0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00];   // U+0078 (x)
const L_Y: [u8; 8] = [ 0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F];   // U+0079 (y)
const L_Z: [u8; 8] = [ 0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00];   // U+007A (z)
const L_SQUIGLY: [u8; 8] = [ 0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00];   // U+007B ({)
const LINE: [u8; 8] = [ 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00];   // U+007C (|)
const R_SQUIGLY: [u8; 8] = [ 0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00];   // U+007D (})
const TILDA: [u8; 8] = [ 0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];   // U+007E (~)

pub const BITMAPFONT: [(char, [u8; 8]); 95] = [
  (' ', SPACE),
  ('!', EXC),
  ('"', QUOTE),
  ('#', HASH),
  ('$', DOLLAR),
  ('%', PERCENT),
  ('&', ANDPERSAND),
  ('\'', SQUOTE),
  ('(', L_PAREN),
  (')', R_PAREN),
  ('*', STAR),
  ('+', PLUS),
  (',', COMMA),
  ('-', MINUS),
  ('.', PERIOD),
  ('/', B_SLASH),
  ('0', ZERO),
  ('1', ONE),
  ('2', TWO),
  ('3', THREE),
  ('4', FOUR),
  ('5', FIVE),
  ('6', SIX),
  ('7', SEVEN),
  ('8', EIGHT),
  ('9', NINE),
  (':', COLON),
  (';', SEMI_COLON),
  ('<', LESS_THAN),
  ('=', EQUAL),
  ('>', GREATER_THAN),
  ('?', QUESTION),
  ('@', AT_SIGN),
  ('A', A),
  ('B', B),
  ('C', C),
  ('D', D),
  ('E', E),
  ('F', F),
  ('G', G),
  ('H', H),
  ('I', I),
  ('J', J),
  ('K', K),
  ('L', L),
  ('M', M),
  ('N', N),
  ('O', O),
  ('P', P),
  ('Q', Q),
  ('R', R),
  ('S', S),
  ('T', T),
  ('U', U),
  ('V', V),
  ('W', W),
  ('X', X),
  ('Y', Y),
  ('Z', Z),
  ('[', L_BRACKET),
  ('\\', F_SLASH),
  (']', R_BRACKET),
  ('^', CARROT),
  ('_', UNDERSCORE),
  ('`', APOS),
  ('a', L_A),
  ('b', L_B),
  ('c', L_C),
  ('d', L_D),
  ('e', L_E),
  ('f', L_F),
  ('g', L_G),
  ('h', L_H),
  ('i', L_I),
  ('j', L_J),
  ('k', L_K),
  ('l', L_L),
  ('m', L_M),
  ('n', L_N),
  ('o', L_O),
  ('p', L_P),
  ('q', L_Q),
  ('r', L_R),
  ('s', L_S),
  ('t', L_T),
  ('u', L_U),
  ('v', L_V),
  ('w', L_W),
  ('x', L_X),
  ('y', L_Y),
  ('z', L_Z),
  ('{', L_SQUIGLY),
  ('|', LINE),
  ('}', R_SQUIGLY),
  ('~', TILDA),
];
